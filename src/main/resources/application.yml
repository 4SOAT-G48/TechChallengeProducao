# Server configuration
server:
  port: ${SERVER_PORT}

# Importing the .env
spring:
  config:
    import: optional:file:.env[.properties]
  profiles:
    active: ${SPRING_PROFILE:none}
  datasource:
    url: jdbc:${POSTGRES_URL}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver
  rabbitmq:
    host: ${RABBITMQ_HOST}
    port: ${RABBITMQ_PORT}
    username: ${RABBITMQ_USER}
    password: ${RABBITMQ_PASSWORD}
  jpa:
    #database-platform: org.hibernate.dialect.PostgreSQLDialect
    #open-in-view: false
    hibernate:
      ddl-auto: update
    show-sql: true
  output:
    ansi:
      enabled: ALWAYS

# Uncomment this line if facing issues with Hibernate
logging:
  level:
    org.hibernate: ${LOG_LEVEL}
    root: ${LOG_LEVEL}
    org.springframework: ${LOG_LEVEL}
  file:
    name: ${LOG_PATH}

# Configuration for OpenAPI documentation
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui-custom.html

message:
  publish:
    producao:
      atualiza-situacao:
        exchange: ${EXCHANGE_PRODUCAO_ATUALIZA_SITUACAO}
        route-key: ${ROUTEKEY_PRODUCAO_ATUALIZA_SITUACAO}
  recever:
    exchange: ${EXCHANGE_PRODUCAO}
    producao:
      inicia-pedido:
        route-key: ${ROUTEKEY_PRODUCAO_INICIA_PEDIDO}
        queues: ${QUEUES_PRODUCAO_INICIA_PEDIDO}


eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/